---
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Define ruby_packages.
  ansible.builtin.set_fact:
    ruby_packages: "{{ __ruby_packages }}"
  when: ruby_packages is not defined

# Include OS-specific installation tasks.
- name: Include setup-redhat.yml when conditions are met
  ansible.builtin.include_tasks: setup-redhat.yml
  when:
    - not ruby_install_from_source
    - ansible_os_family == 'RedHat'

- name: Include setup-debian.yml when conditions are met
  ansible.builtin.include_tasks: setup-debian.yml
  when:
    - not ruby_install_from_source
    - ansible_os_family == 'Debian'

- name: Install ruby from source when ruby_install_from_source is true
  ansible.builtin.include_tasks: install-from-source.yml
  when: ruby_install_from_source

- name: Add user installed RubyGems bin directory to global $PATH.
  ansible.builtin.copy:
    src: rubygems.sh
    dest: /etc/profile.d/rubygems.sh
    mode: '0644'

# Install Bundler and configured gems.
- name: Install Bundler.
  community.general.gem:
    name: bundler
    state: present
    user_install: false
  when: ruby_install_bundler

- name: Install configured gems.
  community.general.gem:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default(omit) }}"
    user_install: "{{ item.user_install | default(omit) }}"
    state: present
  become: true
  become_user: "{{ ruby_install_gems_user }}"
  with_items: "{{ ruby_install_gems }}"
